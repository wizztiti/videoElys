<?php

namespace Tests\Unit\Models;

use App\Models\Formation;
use App\Models\Category;
use Tests\TestCase;
use Illuminate\Support\Facades\DB;
use Illuminate\Foundation\Testing\WithFaker;
use Illuminate\Foundation\Testing\RefreshDatabase;

class ModelFormationTest extends TestCase
{
    use RefreshDatabase;

    private $categories = array();
    private $categoriesIDs = array();
    private $formations;

    function setUp()
    {
        parent::setUp(); // TODO: Change the autogenerated stub

        // DEFINI LE NOMBRE DE CATEGORIES & FORMATION POUR CETTE SERIE DE TEST
        $nbr_categories = 3;
        $nbr_formations = 3;

        // Création des categories
        for($i = 1; $i <= $nbr_categories; $i++) {
            array_push($this->categories, factory(Category::class)->create(['name' => 'category-' . $i]));
        }
        Category::each(function($item, $key){
            array_push($this->categoriesIDs, $item->id);
        });

        // Création des formations
        for($i = 1; $i <= $nbr_formations; $i++) {
            $categoryIDRandom = $this->categoriesIDs[array_rand($this->categoriesIDs)];
            factory(Formation::class)->create(['category_id' => Category::where('id', '=', $categoryIDRandom)->first()]);
        }
        $this->formations = Formation::all();
    }

    /**
     * @test
     */
    function delete_formation() {
        //Test suppression d'une formation
        $this->formations->first()->delete();
        $this->assertEquals(2, Formation::count());
    }

    /**
     * @test
     */
    function delete_category_used() {
        // Test SUPPRESSION D'UNE CATEGORIE UTILISEE non autorisée
        try {
            $this->formations->first()->category->delete();
            $this->fail('WARNING : Category delete !!');
        } catch (\Exception $e) {
            $this->assertEquals(3 , Category::count());
        }
    }

    /**
     * @test
     */
    function delete_category_unused() {
        // Test SUPPRESSION D'UNE CATEGORIE non utilisée
        DB::table('formations')->truncate();
        Category::first()->delete();
        $this->assertEquals(2 , Category::count());
    }
}
