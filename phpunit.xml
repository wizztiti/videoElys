<?xml version="1.0" encoding="UTF-8"?>
<phpunit backupGlobals="false"
         backupStaticAttributes="false"
         bootstrap="vendor/autoload.php"
         colors="true"
         convertErrorsToExceptions="true"
         convertNoticesToExceptions="true"
         convertWarningsToExceptions="true"
         processIsolation="false"
         stopOnFailure="false">
    <testsuites>
        <testsuite name="Feature">
            <directory suffix="Test.php">./tests/Feature</directory>
        </testsuite>

        <testsuite name="Unit">
            <directory suffix="Test.php">./tests/Unit</directory>
        </testsuite>
    </testsuites>
    <filter>
        <whitelist processUncoveredFilesFromWhitelist="true">
            <directory suffix=".php">./app</directory>
        </whitelist>
    </filter>
    <php>
        <env name="APP_ENV" value="testing"/>
        <env name="DB_CONNECTION" value="testing"/>
        <env name="BCRYPT_ROUNDS" value="4"/>
        <env name="CACHE_DRIVER" value="array"/>
        <env name="SESSION_DRIVER" value="array"/>
        <env name="QUEUE_DRIVER" value="sync"/>
        <env name="MAIL_DRIVER" value="array"/>
    </php>

    <!--
               !!!!!     IMPORTANT IMPORTANT IMPORTANT!!!!!!

    Supporting delete cascade with SQLite and Laravel
    http://novate.co.uk/supporting-delete-cascade-with-sqlite-and-laravel/

    dans /vendor/laravel/framework/src/Illuminate/Database/Connectors/SQLiteConnector.php, replace:
        return $this->createConnection("sqlite:{$path}", $config, $options);

    par:
        $pdo=$this->createConnection("sqlite:{$path}", $config, $options);

        //any exec statement?
        $exec = array_get($config, 'exec');
        if(isset($exec))
        {
            $pdo->exec($exec);
        }
        return $pdo;
    -->
</phpunit>
